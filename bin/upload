#!/usr/bin/python3

from argparse import ArgumentParser
import subprocess
import hashlib
import time
import json
import os

"""
# Usage

upload jcs filename
upload jcsl filename --safe --pack
"""

def shell(cmd):
    """
    simplifys calling shell
    """
    return subprocess.check_output(cmd, shell=True).decode().strip()

def parse_args():
    parser=ArgumentParser('command to quickly scp files onto servers\nservers must be defined in ~/.ssh/config')
    parser.add_argument('--pack', dest='pack', action='store_true', help='pack files into .tgz archive before uploading')
    parser.add_argument('-o', '--out', default='~/uploads/', help='upload output directory')
    # parser.add_argument('--hash', dest='hash', action='store_true', help='hash the filename to ensure that nothing is overwritten on server')
    # parser.add_argument('--safe', dest='safe', action='store_true', help='do not check to see if file already exists on server')
    parser.add_argument('server', nargs=1, help='name of server that is defined in ssh config file')
    parser.add_argument('files', nargs='*', help='files to be uploaded')
    return parser.parse_args()

def upload(f):
    """
    does scp shell
    """
    cmd = 'nice scp -r {f} {server}:{out}'.format(
        server=args.server[0] if isinstance(args.server, list) else args.server,
        f=f,
        out=args.out,
    )
    os.system(cmd)

def select_file():
    ls=os.listdir('./')
    for i in range(len(ls)):
        print(i, ls[i])
    return ls[int(input('select -> ').strip())]

def create_archive(f):
    cmd = "tar zcvf {f}.tgz {f}".format(f=f)
    os.system(cmd)
    return '{f}.tgz'.format(f=f)

def delete_archive(f):
    print('rm {f}'.format(f=f))
    os.remove(f)

def main():
    if len(args.files) == 0:
        upload(select_file())
        exit(0)
    for f in args.files:
        if args.pack:
            f=create_archive(f)
        upload(f)
        if args.pack:
            delete_archive(f)

if __name__ == "__main__":
    args=parse_args()
    main()
